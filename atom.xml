<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>空山新雨</title>
  
  <subtitle>空山新雨后，天气晚来秋</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mountaintai.github.io/"/>
  <updated>2019-11-13T09:08:54.105Z</updated>
  <id>https://mountaintai.github.io/</id>
  
  <author>
    <name>mountain</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R学习笔记（一）</title>
    <link href="https://mountaintai.github.io/R_1.html"/>
    <id>https://mountaintai.github.io/R_1.html</id>
    <published>2019-11-13T09:09:37.202Z</published>
    <updated>2019-11-13T09:08:54.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>R语言轻便、简单、又开源。强大的统计和作图备受科研人员喜爱。</p><h2 id="空间管理"><a href="#空间管理" class="headerlink" title="空间管理"></a>空间管理</h2><p>不同的分析项目用不同的文件夹管理，是一个不错的选择。通过一系列命令，可以完成空间的定向，数据的读取、数据加载、数据保存，命令保存等操作。在任何项目开始前运行下面命令可以为您保持一个相对独立的工作环境。</p><p><code>getwd()  当前工作目录</code></p><a id="more"></a><p><code>setwd() 更改工作目录</code></p><p><code>save.image(&quot;myfiles&quot;) 保存工作空间</code></p><p><code>savehistory(&quot;myfiles&quot;) 保存历史命令</code></p><p><code>load(&quot;myfiles&quot;) 加载空间</code></p><p>把数据库文件放到setwd()的目录中，可以进行数据的读取等操作。工作完成后，保存空间和命令，下次打开之前用<strong>load()</strong>加载一下方可调用空间中既有的数据库。</p><h2 id="读取Excel数据"><a href="#读取Excel数据" class="headerlink" title="读取Excel数据"></a>读取Excel数据</h2><p>首先把Excel转换成csv格式，用如下命令进行调用：</p><p><code>mydata &lt;- read.table(&quot;xx.csv&quot;,header = TRUE,sep = &quot;,&quot;,row.names=&quot;自定义变量&quot;)</code></p><p>注意head = <strong>TRUE要大写</strong>。</p><h2 id="数据库结构分析"><a href="#数据库结构分析" class="headerlink" title="数据库结构分析"></a>数据库结构分析</h2><p><code>dim(mydata)  显示观测数（行）和变量数（列）</code></p><p><code>str(mydata)  显示数据库中每个变量的性质和赋值</code></p><p><code>summary(mydata) 概括数据库，定性变量显示频率，定量变量显示均值等</code></p><p><code>names(mydata)  显示数据库中的所有变量名</code></p><p><code>fix(mydata)</code>  显示一个可视化的数据框</p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><ul><li>创建新变量</li></ul><p><code>mydata &lt;- transform(mydata,sumx = x1 + x2,meanx =  (x1+x2)/2)</code></p><ul><li>变量重命名</li></ul><p><code>names(mydata)[2]  &lt;- &quot;newname&quot; 2指的是变量在数据库中的第几列，可以通过names命令查看</code> </p><p><code>names(mydata)[4:9] &lt;- c(&quot;new1&quot;,&quot;new2&quot;,...) 批量重命名</code></p><ul><li>缺失值的处理</li></ul><p><code>mydata$age[mydata$age == 99] &lt;- NA  重编码</code></p><p><code>newdata &lt;- na.omit(mydata)  newdata中仅含有完整数据</code></p><p><code>z &lt;- sum(x, na.rm = TRUE)  某函数分析时，na.rm = TRUE忽略缺失值,可查阅help，看此函数是否有该选项</code></p><ul><li><p>数据集选子集</p><ul><li>选入变量</li></ul><p><code>newdata &lt;- mydata[,c(5:10)]  选取第5到10列变量</code></p><p>或：</p><p><code>myvars &lt;- c(&quot;var1&quot;,&quot;var2&quot;,&quot;var3&quot;,...)   生成需要保留变量的向量</code></p><p><code>newdata &lt;- mydata[myvars]  直接输入，选取特定变量</code></p><!--myvars <- names(yancao)[5:10]  names(yancao)生成一个包含所有变量的向量，然后可以用向量定位的方式去进行下面的定位环节。此代码的意思就是选取生成myvars，包含mydata第5到第10个变量--><ul><li>剔除变量</li></ul><p><code>myvars &lt;- names(mydata) %in% c(&quot;var1&quot;,&quot;var2&quot;,...)    var1, var2是要排除的变量</code></p><p><code>newdata &lt;- mydata[!myvars]  !是逻辑反义</code></p><p>或</p><p><code>newdata &lt;- mydata[c(-2,-4,-5)]   -2,-4,-5为names(mydata)后显示的变量位置</code></p><ul><li>选取观测</li></ul><p><code>newdata &lt;- mydata[1:10,]</code></p><p>特定条件选择</p><p><code>newdata &lt;- mydata[which(sex == &quot;M&quot; &amp; age &gt;18),]</code></p><p>OR </p><p><code>attach(mydata)</code></p><p><code>newdata &lt;- mydata[which(sex == &quot;M&quot; &amp; age &gt;18),]</code></p><p><code>detach(mydata)</code></p><ul><li>高级技巧subset函数</li></ul><p><code>newdata &lt;- subset(mydata, conditon1 &amp;or| condition2 &amp;or| condition3 &amp;or| ... , select=c(&quot;var1&quot;,&quot;var2&quot;,...,&quot;varN&quot;))</code>    </p><p>其中select=c(“var1”,”var2”,…,”varN”)可写成select=var1:varN</p></li></ul><p>未完待续~</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;R语言轻便、简单、又开源。强大的统计和作图备受科研人员喜爱。&lt;/p&gt;&lt;h2 id=&quot;空间管理&quot;&gt;&lt;a href=&quot;#空间管理&quot; class=&quot;headerlink&quot; title=&quot;空间管理&quot;&gt;&lt;/a&gt;空间管理&lt;/h2&gt;&lt;p&gt;不同的分析项目用不同的文件夹管理，是一个不错的选择。通过一系列命令，可以完成空间的定向，数据的读取、数据加载、数据保存，命令保存等操作。在任何项目开始前运行下面命令可以为您保持一个相对独立的工作环境。&lt;/p&gt;&lt;p&gt;&lt;code&gt;getwd()  当前工作目录&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="统计分析" scheme="https://mountaintai.github.io/categories/%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/"/>
    
    
      <category term="R Data_cleaning" scheme="https://mountaintai.github.io/tags/R-Data-cleaning/"/>
    
  </entry>
  
  <entry>
    <title>PVE下的软路由配置</title>
    <link href="https://mountaintai.github.io/Openwrt.html"/>
    <id>https://mountaintai.github.io/Openwrt.html</id>
    <published>2019-10-28T00:21:12.628Z</published>
    <updated>2019-10-28T00:21:12.628Z</updated>
    
    <content type="html"><![CDATA[<p>PVE是一个虚拟机平台，相对于Windows下的虚拟机来说，PVE是直接建立在硬件上的虚拟机平台。之后在PVE上可以虚拟出各种操作系统。PVE对系统配置要求较低，可以应用在比较老旧的平台上。</p><p>感谢BILL MIKE大神，让小白重新认识了路由，以下操作方法均来自BILL Mike 大神。我仅作简单记录，方便自已以后留档查看。</p><a id="more"></a><h3 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h3><p>进行以下操作前需要有一个硬件及软件环境，具体我是参考的BILL MIKE的视频<a href="https://pan.baidu.com/s/1PobK1yPB-jMbRhOtUX76-Q" target="_blank" rel="noopener">网盘</a>。</p><ul><li>硬件已经安装PVE底层虚拟系统。</li><li>PVE建立好虚拟机。</li><li>软路由固件</li><li>WinSCP</li></ul><h3 id="PVE平台上的操作"><a href="#PVE平台上的操作" class="headerlink" title="PVE平台上的操作"></a>PVE平台上的操作</h3><ul><li>WinSCP进入虚拟机后台文件管理目录（SFTP模式）</li></ul><blockquote><p>PVE的后台地址：安装PVE时候设定的（192.168.2.1）<br>账号：默认root；<br>密码：你自己设定的后台登陆密码<br>其他默认<br><img src="http://pzx8ezizb.bkt.clouddn.com/1.jpg" alt></p></blockquote><ul><li>进入后台的root目录，然后把本地的固件拖到root目录下。<strong>注意</strong>拖拽之前，缩短固件名称（如改成Jump.img）方面后面操作。</li><li>进入PVE网页管理界面，进入shell，运行如下命令<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x img2kvm</span><br><span class="line">./img2kvm  jump.img(镜像名称） <span class="number">555</span>（pve虚拟机名称） vm<span class="number">-555</span>-disk<span class="number">-2</span>（转化后名称）</span><br></pre></td></tr></table></figure><img src="http://pzx8ezizb.bkt.clouddn.com/11.jpg" alt></li></ul><h3 id="虚拟机中的操作"><a href="#虚拟机中的操作" class="headerlink" title="虚拟机中的操作"></a>虚拟机中的操作</h3><p>上述步骤，会在指定虚拟机生成一个磁盘。注意观察，刚开始处在未加载状态。<br><img src="http://pzx8ezizb.bkt.clouddn.com/2.jpg" alt></p><ul><li>转换完成后进入建立好的虚拟机，可以看到一个新的磁盘disk-1。</li><li>关闭虚拟机，并把disk-0分离，添加disk-1</li><li>运行虚拟机，进入控制台，输入如下命令<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/config/network   修改路由ip地址</span><br><span class="line">passwd   修改路由器登陆密码（默认用户名root）</span><br></pre></td></tr></table></figure><blockquote><p><strong>Vi编辑器操作方法</strong><br>-i：修改ip，ESC：退出编辑，:wq 保存退出vi<br>reboot重启路由后，输入ip地址进入后台管理界面</p></blockquote></li></ul><h3 id="路由器设置"><a href="#路由器设置" class="headerlink" title="路由器设置"></a>路由器设置</h3><p>路由器设置前提需要明确路由器充当的定位，此处设置只针对<strong>旁路由</strong>。具体设置见下图</p><p><img src="http://pzx8ezizb.bkt.clouddn.com/3.jpg" alt><br><img src="http://pzx8ezizb.bkt.clouddn.com/4.jpg" alt><br><img src="http://pzx8ezizb.bkt.clouddn.com/5.jpg" alt></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>攻略简单，以提示自己为主！如有问题欢迎邮件咨询。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PVE是一个虚拟机平台，相对于Windows下的虚拟机来说，PVE是直接建立在硬件上的虚拟机平台。之后在PVE上可以虚拟出各种操作系统。PVE对系统配置要求较低，可以应用在比较老旧的平台上。&lt;/p&gt;&lt;p&gt;感谢BILL MIKE大神，让小白重新认识了路由，以下操作方法均来自BILL Mike 大神。我仅作简单记录，方便自已以后留档查看。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://mountaintai.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="软路由" scheme="https://mountaintai.github.io/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>如何解决win10 Net framework3.5 安装失败的问题</title>
    <link href="https://mountaintai.github.io/net%20framework.html"/>
    <id>https://mountaintai.github.io/net framework.html</id>
    <published>2019-10-28T00:21:12.628Z</published>
    <updated>2019-10-28T00:21:12.628Z</updated>
    
    <content type="html"><![CDATA[<p>精简版的win10经常缺失各种net framework框架，而net framework框架又是许多程序运行所必备的组件，因此解决此问题至关重要!</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>一个完整的win10安装镜像，可以从<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN_i tell you</a>下载。</li><li>一段代码，<strong>注意此处的E需要修改成你电脑中加载镜像后的镜像盘符</strong>.<br><code>dism.exe /online /enable-feature /featurename:netfx3 /Source:E:\sources\sxs</code> </li></ul><a id="more"></a><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ol><li><p>加载win10.iso系统镜像。<br><img src="http://pzx8ezizb.bkt.clouddn.com/nfw1.png" alt></p></li><li><p>打开powershell（管理员），复制代码 ，<strong>注意代码中E的替换</strong><br><img src="http://pzx8ezizb.bkt.clouddn.com/nfw2.png" alt></p></li><li><p>运行代码即可<br><img src="http://pzx8ezizb.bkt.clouddn.com/nfw3.png" alt></p></li></ol><h3 id="更多操作"><a href="#更多操作" class="headerlink" title="更多操作"></a>更多操作</h3><p>作者试验了多种方法，最终上述方法可行，希望可以帮助到您。如果此种方法不行，可参考<a href="https://zhuanlan.zhihu.com/p/33467631" target="_blank" rel="noopener">知乎</a>，祝顺利~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;精简版的win10经常缺失各种net framework框架，而net framework框架又是许多程序运行所必备的组件，因此解决此问题至关重要!&lt;/p&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个完整的win10安装镜像，可以从&lt;a href=&quot;https://msdn.itellyou.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MSDN_i tell you&lt;/a&gt;下载。&lt;/li&gt;
&lt;li&gt;一段代码，&lt;strong&gt;注意此处的E需要修改成你电脑中加载镜像后的镜像盘符&lt;/strong&gt;.&lt;br&gt;&lt;code&gt;dism.exe /online /enable-feature /featurename:netfx3 /Source:E:\sources\sxs&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://mountaintai.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Windows" scheme="https://mountaintai.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>github/hexo博客入坑指南</title>
    <link href="https://mountaintai.github.io/hexo-enter.html"/>
    <id>https://mountaintai.github.io/hexo-enter.html</id>
    <published>2019-10-22T13:27:29.000Z</published>
    <updated>2019-10-28T00:21:12.628Z</updated>
    
    <content type="html"><![CDATA[<p>感谢这个互联网时代，可以让每个人自由发挥！也感谢这个时代的大神，让小白可以拥有自己的博客！</p><h2 id="hexo本地环境搭建"><a href="#hexo本地环境搭建" class="headerlink" title="hexo本地环境搭建"></a>hexo本地环境搭建</h2><h3 id="基本环境介绍"><a href="#基本环境介绍" class="headerlink" title="基本环境介绍"></a>基本环境介绍</h3><ul><li>运行平台：windows10</li><li>node.js：version 9.11.1</li><li>git.exe :version 2.23.0</li><li>nodepad++: version 9.0 （用于编辑.yml文件）<br>node.js/git.exe可在<a href="https://pan.baidu.com/s/1ZLkLG6TpKPOYR6Iy5JtoMQ" target="_blank" rel="noopener">度盘</a>直接下载，提取码：t8rm。</li></ul><a id="more"></a><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li>安装node.js，一路默认即可！</li><li>安装git.exe，一路默认即可！</li><li>安装nodepad++，一路默认即可！</li></ol><p>安装后在任意文件夹点击右键可出现下图：<br><img src="1.jpg" alt="git bash here"></p><h3 id="安装hexo及npm组件"><a href="#安装hexo及npm组件" class="headerlink" title="安装hexo及npm组件"></a>安装hexo及npm组件</h3><ol><li>在任意硬盘下新建文件夹，作为博客的根目录，并进入该文件夹</li><li>在该文件中右键，并运行 Git Bash Here</li><li>安装hexo，运行如下命令（二选一即可）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>坑1</strong>： 如果在bash命令行中无法运行npm相关命令，检查电脑全局环境变量配置<br><img src="2.jpg" alt></p></blockquote><ol start="4"><li>初始化hexo环境，即可开始进行hexo博客的本地撰写（hexo g）和预览（hexo s）</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="Github的连接与博客推送"><a href="#Github的连接与博客推送" class="headerlink" title="Github的连接与博客推送"></a>Github的连接与博客推送</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>注册Github账号，并新建库resporitory，命名为：你的用户名.github.io。新建库的setting中，下拉找到theme，选择任意主题即可，具体参考<a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-1" target="_blank" rel="noopener">韦阳的博客</a>。</p><h3 id="Github连接"><a href="#Github连接" class="headerlink" title="Github连接"></a>Github连接</h3><ul><li><p>向Github自报家门，运行以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的Github用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的Github邮箱</span></span><br></pre></td></tr></table></figure></li><li><p>本地ssh密钥生成与预览</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email"</span>   </span><br><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure><p>ssh的生成一路enter即可！</p></li><li><p>复制命令行中出现的密钥代码，粘贴到Github网站&gt;头像&gt;setting&gt;SSH and GPG keys&gt;SSH Keys，新建，标题任意，内容为命令行中带代码。<br><img src="3.png" alt></p></li><li><p>验证是否成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>验证成功，在命令中会有<strong>sucessfully</strong>的字样！</p></li></ul><blockquote><p><strong>坑2</strong>：在验证中会出现Are you sure you want to continue connecting (yes/no/[fingerprint])? 的提示，务必填写yes后，再enter，继续之后的操作！</p></blockquote><h3 id="Hexo博客推送"><a href="#Hexo博客推送" class="headerlink" title="Hexo博客推送"></a>Hexo博客推送</h3><ul><li>安装插件，如果没有反应，多试几次！<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li>设置根目录下的_config.yml文件，在最后deploy处添加：<br>deploy:<br>空格空格 type:空格 git<br>空格空格repository:空格 <a href="https://github.com/你的用户名/你的用户名.github.io" target="_blank" rel="noopener">https://github.com/你的用户名/你的用户名.github.io</a><br>空格空格branch: 空格master</li></ul><h3 id="hexo写博客相关命令"><a href="#hexo写博客相关命令" class="headerlink" title="hexo写博客相关命令"></a>hexo写博客相关命令</h3><p>为了使图文并茂，此处需安装一个插件：npm install hexo-asset-image –save。</p><ul><li>博客新建：hexo new “title”</li><li>博客生成：hexo g</li><li>博客本地预览： hexo s</li><li>博客上传到Github： hexo d</li></ul><h2 id="最后，还会见"><a href="#最后，还会见" class="headerlink" title="最后，还会见"></a>最后，还会见</h2><ul><li>主题推荐<a href="https://github.com/theme-next/hexo-theme-next.git" target="_blank" rel="noopener">NEXT</a>，关于如何配置，我会在新的博客中记录。</li><li>搭建的过程看了许多大牛的文章，收益匪浅。尤其是<a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-1" target="_blank" rel="noopener">韦阳的博客</a>还给予了微信的指导，十分感谢。本文也列出了我参考的博客文章，希望对其他人有所帮助。<ul><li><a href="https://www.simon96.online/2018/11/10/hexo-env/" target="_blank" rel="noopener">simon96</a></li><li><a href="http://eternalzttz.com/hexo-next.html" target="_blank" rel="noopener">eternalzttz</a></li><li><a href="https://io-oi.me/tech/hexo-next-optimization/" target="_blank" rel="noopener">reuixiy</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢这个互联网时代，可以让每个人自由发挥！也感谢这个时代的大神，让小白可以拥有自己的博客！&lt;/p&gt;&lt;h2 id=&quot;hexo本地环境搭建&quot;&gt;&lt;a href=&quot;#hexo本地环境搭建&quot; class=&quot;headerlink&quot; title=&quot;hexo本地环境搭建&quot;&gt;&lt;/a&gt;hexo本地环境搭建&lt;/h2&gt;&lt;h3 id=&quot;基本环境介绍&quot;&gt;&lt;a href=&quot;#基本环境介绍&quot; class=&quot;headerlink&quot; title=&quot;基本环境介绍&quot;&gt;&lt;/a&gt;基本环境介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;运行平台：windows10&lt;/li&gt;
&lt;li&gt;node.js：version 9.11.1&lt;/li&gt;
&lt;li&gt;git.exe :version 2.23.0&lt;/li&gt;
&lt;li&gt;nodepad++: version 9.0 （用于编辑.yml文件）&lt;br&gt;node.js/git.exe可在&lt;a href=&quot;https://pan.baidu.com/s/1ZLkLG6TpKPOYR6Iy5JtoMQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;度盘&lt;/a&gt;直接下载，提取码：t8rm。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://mountaintai.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="https://mountaintai.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://mountaintai.github.io/hello-world.html"/>
    <id>https://mountaintai.github.io/hello-world.html</id>
    <published>2019-10-21T07:58:17.932Z</published>
    <updated>2019-10-21T07:58:17.932Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
